"""
Defines the standardized structures for requests generated by LLM agents.

These structures are intended to be parsed by the core game loop and validated
by the RuleCheckerAgent before being executed.
"""

from typing import TypedDict, Optional, Union, List, Dict, Any

# --- Skill Check Request ---

class SkillCheckRequest(TypedDict):
    """
    Represents a request for a skill check to be performed.
    """
    action: str  # Always 'request_skill_check'
    actor_id: str # ID of the entity performing the check (e.g., 'player')
    skill_name: str # The specific skill being used (e.g., 'lockpicking', 'persuasion')
    stat_name: Optional[str] # Optional: Base stat if different from skill's default (e.g., using Strength for an Athletics check)
    target_actor_id: Optional[str] # Optional: ID of the entity being targeted by the skill check
    difficulty_class: Optional[int] # Optional: A specific DC set by the narrative/situation
    # Optional: Modifiers specific to this check instance (e.g., situational bonuses/penalties)
    # Example: {'advantage': 1, 'circumstance_bonus': 2, 'penalty_reason': "Distracted"}
    modifiers: Optional[Dict[str, Any]]
    # Optional: Contextual information about why the check is being made
    context: Optional[str]


# --- State Change Request ---

class StateChangeRequest(TypedDict):
    """
    Represents a request to modify the game state programmatically.
    """
    action: str # Always 'request_state_change'
    target_id: str # ID of the entity or object whose state is changing (e.g., 'player', 'goblin_1', 'door_A')
    attribute: str # The specific attribute to change (e.g., 'hp', 'status_effects', 'position', 'inventory', 'relationship_stance')
    change_type: str # How to apply the change ('set', 'add', 'remove', 'append', 'update_dict')
    value: Any # The value to set, add, remove, etc.
    # Optional: Duration for temporary effects (e.g., in turns or seconds, depending on context)
    duration: Optional[int]
    # Optional: Contextual information about why the state change is occurring
    context: Optional[str]


# --- Agent Output Structure ---
# An agent's response might contain narrative and potentially multiple requests.

class AgentOutput(TypedDict):
    """
    Standard output structure for LLM agents.
    """
    narrative: str # The descriptive text generated by the agent.
    requests: List[Union[SkillCheckRequest, StateChangeRequest]] # List of structured requests. Can be empty.